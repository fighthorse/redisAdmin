
 # build docker images
 docker build -t redis_admin:v2 ../

 # start images
 docker run --name my_redis_admin -p 8080:10110 -d redis_admin:v2

 # browsers open url
 http://127.0.0.1:8080/assets/

 # study notes

 语法
 docker build 命令用于使用 Dockerfile 创建镜像。

 语法
 ###  docker build [OPTIONS] PATH | URL | -
 OPTIONS说明：

 --build-arg=[] :设置镜像创建时的变量；

 --cpu-shares :设置 cpu 使用权重；

 --cpu-period :限制 CPU CFS周期；

 --cpu-quota :限制 CPU CFS配额；

 --cpuset-cpus :指定使用的CPU id；

 --cpuset-mems :指定使用的内存 id；

 --disable-content-trust :忽略校验，默认开启；

 -f :指定要使用的Dockerfile路径；

 --force-rm :设置镜像过程中删除中间容器；

 --isolation :使用容器隔离技术；

 --label=[] :设置镜像使用的元数据；

 -m :设置内存最大值；

 --memory-swap :设置Swap的最大值为内存+swap，"-1"表示不限swap；

 --no-cache :创建镜像的过程不使用缓存；

 --pull :尝试去更新镜像的新版本；

 --quiet, -q :安静模式，成功后只输出镜像 ID；

 --rm :设置镜像成功后删除中间容器；

 --shm-size :设置/dev/shm的大小，默认值是64M；

 --ulimit :Ulimit配置。

 --squash :将 Dockerfile 中所有的操作压缩为一层。

 --tag, -t: 镜像的名字及标签，通常 name:tag 或者 name 格式；可以在一次构建中为一个镜像设置多个标签。

 --network: 默认 default。在构建期间设置RUN指令的网络模式


 docker run ：创建一个新的容器并运行一个命令

 ### docker run [OPTIONS] IMAGE [COMMAND] [ARG...]
 OPTIONS说明：

 -a stdin: 指定标准输入输出内容类型，可选 STDIN/STDOUT/STDERR 三项；

 -d: 后台运行容器，并返回容器ID；

 -i: 以交互模式运行容器，通常与 -t 同时使用；

 -P: 随机端口映射，容器内部端口随机映射到主机的端口

 -p: 指定端口映射，格式为：主机(宿主)端口:容器端口

 -t: 为容器重新分配一个伪输入终端，通常与 -i 同时使用；

 --name="nginx-lb": 为容器指定一个名称；

 --dns 8.8.8.8: 指定容器使用的DNS服务器，默认和宿主一致；

 --dns-search example.com: 指定容器DNS搜索域名，默认和宿主一致；

 -h "mars": 指定容器的hostname；

 -e username="ritchie": 设置环境变量；

 --env-file=[]: 从指定文件读入环境变量；

 --cpuset="0-2" or --cpuset="0,1,2": 绑定容器到指定CPU运行；

 -m :设置容器使用内存最大值；

 --net="bridge": 指定容器的网络连接类型，支持 bridge/host/none/container: 四种类型；

 --link=[]: 添加链接到另一个容器；

 --expose=[]: 开放一个端口或一组端口；

 --volume , -v: 绑定一个卷